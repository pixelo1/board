<?xml version="1.0" encoding="UTF-8" ?>
<!-- 마이바티스 기본코드 여기서 namespace 는 각각의 매퍼를 구분하는 고유명이 된다 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mappers.board">

	<!-- 게시물 목록 (메퍼에 쿼리 추가) id는 매퍼내 쿼리 구분짓는 고유한이름, resultType은 쿼리 결과의 형태-->
	<!-- resultType는 데이터를 쿼리를 실행한 뒤 결과가 있을 경우에 사용 -->
	<select id="list" resultType="com.board.domain.BoardVO">
		select
			bno, title, content, writer, regDate, viewCnt 
		from tbl_board
	</select>
	
	<!-- 게시물 작성 -->
	<!-- 데이터를 넣을 때는 parameterType를 사용 -->
	<insert id = "write" parameterType = "com.board.domain.BoardVO">
	insert into
		tbl_board(title, content, writer)
			values(#{title}, #{content}, #{writer})
	</insert>
	
	<!-- 게시물 조회 parameterType은 매퍼에 들어오는 데이터, resultType은 매퍼가 내보내는 데이터-->
	<!-- 정수(int)형인 게시물 번호를 보내고, 게시물의 데이터형인 BoardVO를 내보내게됩니다. -->
	<!-- 게시물 조회 -->
	<select id="view" parameterType="int" resultType="com.board.domain.BoardVO">
		select 
			bno, title, content, writer, regDate, viewCnt
		from 
			tbl_board
		where
			bno = #{bno}   
	</select>
	
	<!--  게시물 수정 -->
	<update id = "modify" parameterType = "com.board.domain.BoardVO">
		update tbl_board
			set
				title = #{title},
				content = #{content},
				writer = #{writer}
			where bno = #{bno}
	</update>
	<!-- 게시물 삭제 게시물 번호만 있으면 삭제 가능하기때문에 int 로 설정-->
	<delete id="delete" parameterType="int">
		delete
			from tbl_board
		where bno = #{bno}
	</delete>
	
	<!--  게시물 총 갯수 -->
	<select id="count" resultType="int">
		select count(bno) from tbl_board
	</select>
	
	<!--  게시물 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap" resultType="com.board.domain.BoardVO">
		select
			bno, title, writer, regDate, viewCnt
		from tbl_board
		order by bno desc
			limit #{displayPost}, #{postNum}
	</select>	
	<!-- 게시물 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="com.board.domain.BoardVO">
		select
			bno, title, writer, regDate, viewCnt
		from tbl_board
		
<!-- DAO에서 문자열 데이터를 받게되면 '%${keyword}%' 는 '%'keyword'%' 처럼, 받은 데이터의 앞뒤에 따옴표가 붙기 때문에 저대로 사용하면 에러가 발생할 수 있음 -->
		<!-- WHERE title LIKE '%${keyword}%'    concat 사용해서 문자열을 합칠수 있다-->
		<!--  searchType을 어디서 가져오는가 -DAO부터 컨트롤러 까지 작업해야함 -->
		<!-- if 조건문 사용하여 구분 -->
		
		<if test='searchType.equals("title")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
		</if>
 
		<if test='searchType.equals("content")'>
			WHERE content LIKE concat('%', #{keyword}, '%')
		</if>
 
		<if test='searchType.equals("title_content")'>
			WHERE title LIKE concat('%', #{keyword}, '%') 
				or content LIKE concat('%', #{keyword}, '%')
		</if>
 
		<if test='searchType.equals("writer")'>
			WHERE writer LIKE concat('%', #{keyword}, '%')
		</if>
 
			order by bno desc
				limit #{displayPost}, #{postNum}
	</select> 
	
	
	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		select count(bno) from tbl_board  
  
	<if test='searchType.equals("title")'>
		WHERE title LIKE concat('%', #{keyword}, '%')
	</if>
 
	<if test='searchType.equals("content")'>
		WHERE content LIKE concat('%', #{keyword}, '%')
	</if>
 
	<if test='searchType.equals("title_content")'>
		WHERE title LIKE concat('%', #{keyword}, '%') 
			or content LIKE concat('%', #{keyword}, '%')
	</if>
 
	<if test='searchType.equals("writer")'>
		WHERE writer LIKE concat('%', #{keyword}, '%')
	</if>
 
</select>

</mapper>